{"version":3,"sources":["data.js","App.js","index.js"],"names":["data","name","image","id","uniqid","App","useState","highScore","setHighScore","currentGameList","setCurrentGameList","gameOver","setGameOver","useEffect","shuffleImages","timer","setTimeout","clearTimeout","array","i","length","j","Math","floor","random","temp","className","map","fruit","src","alt","onClick","find","item","newGameList","filter","currentScore","handleClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAeeA,EAbF,CACX,CAAEC,KAAM,SAAUC,MAAO,kBAAmBC,GAAIC,OAChD,CAAEH,KAAM,SAAUC,MAAO,mBAAoBC,GAAIC,OACjD,CAAEH,KAAM,OAAQC,MAAO,iBAAkBC,GAAIC,OAC7C,CAAEH,KAAM,QAASC,MAAO,kBAAmBC,GAAIC,OAC/C,CAAEH,KAAM,OAAQC,MAAO,iBAAkBC,GAAIC,OAC7C,CAAEH,KAAM,QAASC,MAAO,kBAAmBC,GAAIC,OAC/C,CAAEH,KAAM,SAAUC,MAAO,mBAAoBC,GAAIC,OACjD,CAAEH,KAAM,SAAUC,MAAO,mBAAoBC,GAAIC,OACjD,CAAEH,KAAM,YAAaC,MAAO,sBAAuBC,GAAIC,OACvD,CAAEH,KAAM,cAAeC,MAAO,wBAAyBC,GAAIC,Q,eCiF9CC,MAzFf,WACE,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRC,EAAcd,GACdU,EAAmBV,KACnB,IAEAa,qBAAU,WACRC,EAAcd,KACb,CAACS,IAENI,qBAAU,WACR,IAAME,EAAQC,YAAW,WACvBJ,GAAY,KACX,KACH,OAAO,WACLK,aAAaF,MAEd,CAACJ,IAEJ,IAeMG,EAAgB,SAACI,GAErB,IADA,IAAIC,EAAID,EAAME,OAAS,EAChBD,EAAI,EAAGA,IAAK,CACjB,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACnBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,GAGT,OACE,iCACE,6CACCP,GACC,oBAAGe,UAAU,YAAb,UACE,sBAAMA,UAAU,QAAhB,uBADF,8BAIF,mCACE,6CACc,IACZ,sBAAMA,UAAU,QAAhB,SACG1B,EAAKoB,OAASX,EAAgBW,YAGnC,iDACiB,sBAAMM,UAAU,QAAhB,SAAyBnB,UAG5C,qBAAKmB,UAAU,cAAf,SACG1B,EAAK2B,KAAI,SAACC,GACT,IAAQzB,EAAoByB,EAApBzB,GAAID,EAAgB0B,EAAhB1B,MAAOD,EAAS2B,EAAT3B,KACnB,OACE,kCACE,qBAAKyB,UAAU,gBAAf,SACE,qBACEG,IAAK3B,EACL4B,IAAK7B,EACLyB,UAAU,YACVK,QAAS,kBAvDL,SAAC5B,GAEnB,GADoBM,EAAgBuB,MAAK,SAACC,GAAD,OAAUA,EAAK9B,KAAOA,KAC9C,CACf,IAAM+B,EAAczB,EAAgB0B,QAAO,SAACF,GAAD,OAAUA,EAAK9B,KAAOA,KACjEO,EAAmBwB,OACd,CACLtB,GAAY,GACZ,IAAMwB,EAAepC,EAAKoB,OAASX,EAAgBW,OAC/CgB,EAAe7B,GACjBC,EAAa4B,GAEf1B,EAAmBV,IA4CQqC,CAAYlC,SANnBA,YCvE1BmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.05b7fe65.chunk.js","sourcesContent":["import uniqid from \"uniqid\";\n\nconst data = [\n  { name: \"banana\", image: \"/img/banana.png\", id: uniqid() },\n  { name: \"dragon\", image: \"./img/dragon.png\", id: uniqid() },\n  { name: \"kiwi\", image: \"./img/kiwi.png\", id: uniqid() },\n  { name: \"lichi\", image: \"./img/lichi.png\", id: uniqid() },\n  { name: \"lime\", image: \"./img/lime.png\", id: uniqid() },\n  { name: \"mango\", image: \"./img/mango.png\", id: uniqid() },\n  { name: \"orange\", image: \"./img/orange.png\", id: uniqid() },\n  { name: \"papaya\", image: \"./img/papaya.png\", id: uniqid() },\n  { name: \"pineapple\", image: \"./img/pineapple.png\", id: uniqid() },\n  { name: \"pomegranate\", image: \"./img/pomegranate.png\", id: uniqid() },\n];\n\nexport default data;\n","import React, { useState, useEffect } from \"react\";\nimport data from \"./data.js\";\nimport \"./App.css\";\n\nfunction App() {\n  const [highScore, setHighScore] = useState(0);\n  const [currentGameList, setCurrentGameList] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(()=>{\n    shuffleImages(data)\n    setCurrentGameList(data)\n  },[])\n\n    useEffect(() => {\n      shuffleImages(data);\n    }, [currentGameList]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setGameOver(false);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [gameOver]);\n\n  const handleClick = (id) => {\n    const checkObject = currentGameList.find((item) => item.id === id);\n    if (checkObject) {\n      const newGameList = currentGameList.filter((item) => item.id !== id);\n      setCurrentGameList(newGameList);\n    } else {\n      setGameOver(true);\n      const currentScore = data.length - currentGameList.length;\n      if (currentScore > highScore) {\n        setHighScore(currentScore);\n      }\n      setCurrentGameList(data);\n    }\n  };\n\n  const shuffleImages = (array) => {\n    let i = array.length - 1;\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  return (\n    <main>\n      <h1>Memory Game</h1>\n      {gameOver && (\n        <p className=\"game-over\">\n          <span className=\"green\">Game Over</span> - Score has been reset!\n        </p>\n      )}\n      <header>\n        <h2>\n          game score:{\" \"}\n          <span className=\"green\">\n            {data.length - currentGameList.length}\n          </span>\n        </h2>\n        <h4>\n          Highest Score: <span className=\"green\">{highScore}</span>\n        </h4>\n      </header>\n      <div className=\"main-center\">\n        {data.map((fruit) => {\n          const { id, image, name } = fruit;\n          return (\n            <article key={id}>\n              <div className=\"img-container\">\n                <img\n                  src={image}\n                  alt={name}\n                  className=\"fruit-img\"\n                  onClick={() => handleClick(id)}\n                />\n              </div>\n            </article>\n          );\n        })}\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}